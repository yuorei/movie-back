services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "8080:8080"
    volumes:
      - .:/app
    tty: true
    depends_on:
      - postgres
    links:
      - postgres
    environment:
      - DB_PORT=5432
      - DB_USER=user
      - DB_PASSWORD=password
      - DB_NAME=MOVIE_SERVICE
      - DATABASE_URL=postgresql://user:password@postgres:5432/MOVIE_SERVICE?schema=public
      - TOKEN_SECRET_KEY=secret
      - BUCKET_NAME=movie-service
      - AWS_PROFILE=minio
      - AWS_REGION=ap-northeast-1
      - AWS_ACCESS_KEY_ID=minio
      - AWS_SECRET_ACCESS_KEY=minio123
      - AWS_ENDPOINT_URL=http://minio:9000
      - AWS_S3_FORCE_PATH_STYLE=true
      - IMAGE_URL=http://localhost:9000/movie
      - TZ=Asia/Tokyo
    # restart: always
    command: air -c .air.toml

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: MOVIE_SERVICE
      TZ: "Asia/Tokyo"
    ports:
      - 5432:5432
    volumes:
      - postgres_volume:/var/lib/postgresql/data

  minio:
    image: minio/minio:RELEASE.2022-10-08T20-11-00Z
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minio
      - MINIO_ROOT_PASSWORD=minio123
    entrypoint: sh
    command: -c "/opt/bin/minio server /export --address :9000 --console-address :9001"
    volumes:
      - ./docker/minio/data:/export

  minio-setup:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: sh
    command: -c "mc config host add minio http://minio:9000 minio minio123 && mc mb minio/movie-service"
    volumes:
      - ./docker/minio/data:/root/.mc

volumes:
  postgres_volume:
